version: "3.8"
services:
  postgres:
    image: postgres:14
    ports:
      - "5431:5432"
    volumes:
    - postgres:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network
  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [zookeeper]
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    networks:
      - app-network
  server:
    image: "server"
    container_name: "server"
    build:
      context: ./server
      dockerfile: Dockerfile
    env_file:
      - .env    
    ports:
      - 8080:8080
    command: sh -c "npm run typeorm:create-entities && npm run migration:up && npm start"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - app-network
    volumes:
      - ./server:/usr/src/app
      - ./shared-files:/usr/src/app/src/shared
      - /usr/src/app/node_modules
  validation-server:
    image: "validation_server"
    container_name: "validation_server"
    env_file: .env
    build:
      context: ./validation-server
      dockerfile: Dockerfile
    command: npm start
    depends_on: [kafka]
    ports:
      - 8081:8081
    volumes:
      - ./validation-server:/usr/src/app
      - ./shared-files:/usr/src/app/src/shared
      - /usr/src/app/node_modules
    networks:
      - app-network

networks:
  app-network:
      driver: bridge
volumes:
  postgres:
    driver: local
